{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mohsinkamal/Desktop/bingo/src/Components/Cell/Cell.js\",\n    _s = $RefreshSig$();\n\nimport \"./Cell_styles.scss\";\nimport React, { useState } from \"react\";\nimport { checkWin } from \"../../Redux/actions\";\n\nconst Cell = ({\n  cellClass,\n  cellText,\n  cellIndex\n}) => {\n  _s();\n\n  const [checked, setChecked] = useState(false);\n  const [broken, setBroken] = useState(\"\");\n  const [text, setText] = useState(\"\");\n\n  const playSound = () => {\n    let audio = new Audio(\"../../Assets/Sounds/shatter.mp3\");\n    audio.play();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${cellClass} ${broken}`,\n    onClick: () => {\n      if (checked === false) {\n        setChecked(true);\n        const brokenTextureNumber = Math.floor(Math.random() * (2 - 1 + 1)) + 1;\n        setBroken(`broken${brokenTextureNumber}`);\n      } else {\n        console.log(\"Already broken\");\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"cellIndex\",\n      children: cellIndex\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"cell_text\",\n      children: cellText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cell, \"TiZ1xpHhwORraRV0d9r+dwJPIm8=\");\n\n_c = Cell;\nexport default Cell;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cell\");","map":{"version":3,"sources":["/Users/mohsinkamal/Desktop/bingo/src/Components/Cell/Cell.js"],"names":["React","useState","checkWin","Cell","cellClass","cellText","cellIndex","checked","setChecked","broken","setBroken","text","setText","playSound","audio","Audio","play","brokenTextureNumber","Math","floor","random","console","log"],"mappings":";;;;;AAAA,OAAO,oBAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,qBAAzB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,QAAb;AAAuBC,EAAAA;AAAvB,CAAD,KAAwC;AAAA;;AACnD,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMY,SAAS,GAAG,MAAM;AACtB,QAAIC,KAAK,GAAG,IAAIC,KAAJ,CAAU,iCAAV,CAAZ;AACAD,IAAAA,KAAK,CAACE,IAAN;AACD,GAHD;;AAKA,sBACE;AACE,IAAA,SAAS,EAAG,GAAEZ,SAAU,IAAGK,MAAO,EADpC;AAEE,IAAA,OAAO,EAAE,MAAM;AACb,UAAIF,OAAO,KAAK,KAAhB,EAAuB;AACrBC,QAAAA,UAAU,CAAC,IAAD,CAAV;AACA,cAAMS,mBAAmB,GACvBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiB,IAAI,CAAJ,GAAQ,CAAzB,CAAX,IAA0C,CAD5C;AAEAV,QAAAA,SAAS,CAAE,SAAQO,mBAAoB,EAA9B,CAAT;AACD,OALD,MAKO;AACLI,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACD;AACF,KAXH;AAAA,4BAaE;AAAG,MAAA,SAAS,EAAC,WAAb;AAAA,gBAA0BhB;AAA1B;AAAA;AAAA;AAAA;AAAA,YAbF,eAcE;AAAG,MAAA,SAAS,EAAC,WAAb;AAAA,gBAA0BD;AAA1B;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CA5BD;;GAAMF,I;;KAAAA,I;AA8BN,eAAeA,IAAf","sourcesContent":["import \"./Cell_styles.scss\";\nimport React, { useState } from \"react\";\nimport { checkWin } from \"../../Redux/actions\";\n\nconst Cell = ({ cellClass, cellText, cellIndex }) => {\n  const [checked, setChecked] = useState(false);\n  const [broken, setBroken] = useState(\"\");\n  const [text, setText] = useState(\"\");\n\n  const playSound = () => {\n    let audio = new Audio(\"../../Assets/Sounds/shatter.mp3\");\n    audio.play();\n  };\n\n  return (\n    <div\n      className={`${cellClass} ${broken}`}\n      onClick={() => {\n        if (checked === false) {\n          setChecked(true);\n          const brokenTextureNumber =\n            Math.floor(Math.random() * (2 - 1 + 1)) + 1;\n          setBroken(`broken${brokenTextureNumber}`);\n        } else {\n          console.log(\"Already broken\");\n        }\n      }}\n    >\n      <p className=\"cellIndex\">{cellIndex}</p>\n      <p className=\"cell_text\">{cellText}</p>\n    </div>\n  );\n};\n\nexport default Cell;\n"]},"metadata":{},"sourceType":"module"}