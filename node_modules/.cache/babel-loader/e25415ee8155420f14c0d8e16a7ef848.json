{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mohsinkamal/Desktop/bingo/src/Components/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.scss\";\nimport React, { useEffect, useState } from \"react\";\nimport VanillaTilt from \"vanilla-tilt\"; // import Button from \"../Components/Button/Button\";\n\nimport BingoBoard from \"../Components/BingoBoard/BingoBoard\";\n\nconst App = () => {\n  _s();\n\n  const [screenOrientation, setScreenOrientation] = useState(\"\");\n  useEffect(() => {\n    VanillaTilt.init(document.querySelectorAll(\".js-tilt\"), {\n      max: 20,\n      speed: 400,\n      glare: true,\n      gyroscope: true,\n      gyroscopeMinAngleX: -45,\n      gyroscopeMaxAngleX: 45,\n      gyroscopeMinAngleY: -45,\n      gyroscopeMaxAngleY: 45\n    });\n    checkScreenOrientation();\n    console.log(screenOrientation);\n  }, []); // const isPortraitMode = () => {\n  //   console.log(this.state);\n  //   const { screenOrientation } = this.state;\n  //   return screenOrientation === \"portrait\";\n  // };\n\n  const checkScreenOrientation = () => {\n    if (window.matchMedia(\"(orientation: portrait)\").matches) {\n      setScreenOrientation(\"portrait\");\n    }\n\n    if (window.matchMedia(\"(orientation: landscape)\").matches) {\n      setScreenOrientation(\"landscape\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"game_title\",\n      children: \"BREAKING BINGO\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bingoBoard\",\n        children: /*#__PURE__*/_jsxDEV(BingoBoard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"wQNfMqsFh03YXeqSQ/Mcp+s6eq8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/mohsinkamal/Desktop/bingo/src/Components/App.js"],"names":["React","useEffect","useState","VanillaTilt","BingoBoard","App","screenOrientation","setScreenOrientation","init","document","querySelectorAll","max","speed","glare","gyroscope","gyroscopeMinAngleX","gyroscopeMaxAngleX","gyroscopeMinAngleY","gyroscopeMaxAngleY","checkScreenOrientation","console","log","window","matchMedia","matches"],"mappings":";;;;;;AAAA,OAAO,YAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,cAAxB,C,CACA;;AACA,OAAOC,UAAP,MAAuB,qCAAvB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4CL,QAAQ,CAAC,EAAD,CAA1D;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,WAAW,CAACK,IAAZ,CAAiBC,QAAQ,CAACC,gBAAT,CAA0B,UAA1B,CAAjB,EAAwD;AACtDC,MAAAA,GAAG,EAAE,EADiD;AAEtDC,MAAAA,KAAK,EAAE,GAF+C;AAGtDC,MAAAA,KAAK,EAAE,IAH+C;AAItDC,MAAAA,SAAS,EAAE,IAJ2C;AAKtDC,MAAAA,kBAAkB,EAAE,CAAC,EALiC;AAMtDC,MAAAA,kBAAkB,EAAE,EANkC;AAOtDC,MAAAA,kBAAkB,EAAE,CAAC,EAPiC;AAQtDC,MAAAA,kBAAkB,EAAE;AARkC,KAAxD;AAUAC,IAAAA,sBAAsB;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAYf,iBAAZ;AACD,GAbQ,EAaN,EAbM,CAAT,CAHgB,CAkBhB;AACA;AACA;AACA;AACA;;AAEA,QAAMa,sBAAsB,GAAG,MAAM;AACnC,QAAIG,MAAM,CAACC,UAAP,CAAkB,yBAAlB,EAA6CC,OAAjD,EAA0D;AACxDjB,MAAAA,oBAAoB,CAAC,UAAD,CAApB;AACD;;AAED,QAAIe,MAAM,CAACC,UAAP,CAAkB,0BAAlB,EAA8CC,OAAlD,EAA2D;AACzDjB,MAAAA,oBAAoB,CAAC,WAAD,CAApB;AACD;AACF,GARD;;AAUA,sBACE;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAaD,CA/CD;;GAAMF,G;;KAAAA,G;AAiDN,eAAeA,GAAf","sourcesContent":["import \"./App.scss\";\nimport React, { useEffect, useState } from \"react\";\nimport VanillaTilt from \"vanilla-tilt\";\n// import Button from \"../Components/Button/Button\";\nimport BingoBoard from \"../Components/BingoBoard/BingoBoard\";\n\nconst App = () => {\n  const [screenOrientation, setScreenOrientation] = useState(\"\");\n\n  useEffect(() => {\n    VanillaTilt.init(document.querySelectorAll(\".js-tilt\"), {\n      max: 20,\n      speed: 400,\n      glare: true,\n      gyroscope: true,\n      gyroscopeMinAngleX: -45,\n      gyroscopeMaxAngleX: 45,\n      gyroscopeMinAngleY: -45,\n      gyroscopeMaxAngleY: 45,\n    });\n    checkScreenOrientation();\n    console.log(screenOrientation);\n  }, []);\n\n  // const isPortraitMode = () => {\n  //   console.log(this.state);\n  //   const { screenOrientation } = this.state;\n  //   return screenOrientation === \"portrait\";\n  // };\n\n  const checkScreenOrientation = () => {\n    if (window.matchMedia(\"(orientation: portrait)\").matches) {\n      setScreenOrientation(\"portrait\");\n    }\n\n    if (window.matchMedia(\"(orientation: landscape)\").matches) {\n      setScreenOrientation(\"landscape\");\n    }\n  };\n\n  return (\n    <>\n      <h1 className=\"game_title\">BREAKING BINGO</h1>\n      <div className=\"container\">\n        <div className=\"bingoBoard\">\n          <BingoBoard />\n        </div>\n      </div>\n      {/* <div className=\"controls\">\n        <Button/>\n      </div> */}\n    </>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}