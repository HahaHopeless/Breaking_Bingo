{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mohsinkamal/Desktop/bingo/src/Components/Cell/Cell.js\",\n    _s = $RefreshSig$();\n\nimport \"./Cell_styles.scss\";\nimport VanillaTilt from \"vanilla-tilt\";\nimport React, { useState, useRef, useEffect } from \"react\";\n\nconst Cell = ({\n  cellClass\n}) => {\n  _s();\n\n  const [checked, setChecked] = useState(false);\n  const [text, setText] = useState(\"This is the Cell txt\");\n  const tilt = useRef(null);\n  const options = {\n    glare: true,\n    \"max-glare\": 0.7\n  };\n  useEffect(() => {\n    VanillaTilt.init(tilt.current, options);\n  }, [options]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: tilt,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cellClass,\n      onClick: () => {\n        if (checked === false) {\n          setChecked(true);\n          setText(\"I was checked\");\n        } else {\n          return;\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"cell_text\",\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cell, \"gX+UELwNgMs+IaYb9endo44hhMY=\");\n\n_c = Cell;\nexport default Cell;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cell\");","map":{"version":3,"sources":["/Users/mohsinkamal/Desktop/bingo/src/Components/Cell/Cell.js"],"names":["VanillaTilt","React","useState","useRef","useEffect","Cell","cellClass","checked","setChecked","text","setText","tilt","options","glare","init","current"],"mappings":";;;;;AAAA,OAAO,oBAAP;AACA,OAAOA,WAAP,MAAwB,cAAxB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AAAA;;AAC9B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,sBAAD,CAAhC;AAEA,QAAMS,IAAI,GAAGR,MAAM,CAAC,IAAD,CAAnB;AAEA,QAAMS,OAAO,GAAG;AACdC,IAAAA,KAAK,EAAE,IADO;AAEd,iBAAa;AAFC,GAAhB;AAKAT,EAAAA,SAAS,CAAC,MAAM;AACdJ,IAAAA,WAAW,CAACc,IAAZ,CAAiBH,IAAI,CAACI,OAAtB,EAA+BH,OAA/B;AACD,GAFQ,EAEN,CAACA,OAAD,CAFM,CAAT;AAIA,sBACE;AAAK,IAAA,GAAG,EAAED,IAAV;AAAA,2BACE;AACE,MAAA,SAAS,EAAEL,SADb;AAEE,MAAA,OAAO,EAAE,MAAM;AACb,YAAIC,OAAO,KAAK,KAAhB,EAAuB;AACrBC,UAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,UAAAA,OAAO,CAAC,eAAD,CAAP;AACD,SAHD,MAGO;AACL;AACD;AACF,OATH;AAAA,6BAWE;AAAG,QAAA,SAAS,EAAC,WAAb;AAAA,kBAA0BD;AAA1B;AAAA;AAAA;AAAA;AAAA;AAXF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAhCD;;GAAMJ,I;;KAAAA,I;AAkCN,eAAeA,IAAf","sourcesContent":["import \"./Cell_styles.scss\";\nimport VanillaTilt from \"vanilla-tilt\";\nimport React, { useState, useRef, useEffect } from \"react\";\n\nconst Cell = ({ cellClass }) => {\n  const [checked, setChecked] = useState(false);\n  const [text, setText] = useState(\"This is the Cell txt\");\n\n  const tilt = useRef(null);\n\n  const options = {\n    glare: true,\n    \"max-glare\": 0.7,\n  };\n\n  useEffect(() => {\n    VanillaTilt.init(tilt.current, options);\n  }, [options]);\n\n  return (\n    <div ref={tilt}>\n      <div\n        className={cellClass}\n        onClick={() => {\n          if (checked === false) {\n            setChecked(true);\n            setText(\"I was checked\");\n          } else {\n            return;\n          }\n        }}\n      >\n        <p className=\"cell_text\">{text}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Cell;\n"]},"metadata":{},"sourceType":"module"}