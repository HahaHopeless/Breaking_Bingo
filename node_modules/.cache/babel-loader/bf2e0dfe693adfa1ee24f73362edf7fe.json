{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mohsinkamal/Desktop/bingo/src/Components/Cell/Cell.js\",\n    _s = $RefreshSig$();\n\nimport \"./Cell_styles.scss\";\nimport React, { useState, useEffect } from \"react\";\nimport winimage from \"../../Assets/Images/win.gif\";\n\nconst Cell = ({\n  cellClass,\n  cellText,\n  cellIndex\n}) => {\n  _s();\n\n  const [checkClass, setCheckClass] = useState(\"\");\n  const [bingo, setBingo] = useState(0);\n  const [trackBingo, setTrackBingo] = useState();\n  const [showWin, setShowWin] = useState(-100);\n  var cells = null;\n  useEffect(() => {\n    cells = document.querySelectorAll(\".cell\");\n    checkBingo();\n  }, [checkClass]);\n  useEffect(() => {\n    console.log(trackBingo);\n  }, [trackBingo]);\n  const BINGO_CONDITIONS = [// Horizontal\n  [0, 1, 2, 3, 4], [5, 6, 7, 8, 9], [10, 11, 12, 13], [14, 15, 16, 17, 18], [19, 20, 21, 22, 23], //Vertical\n  [0, 5, 10, 14, 19], [1, 6, 11, 15, 20], [2, 7, 16, 21], [3, 8, 12, 17, 22], [4, 9, 13, 18, 23], //Diagonal\n  [0, 6, 17, 23], [4, 8, 15, 19]];\n\n  const checkBingo = () => {\n    const getMatchedCombos = BINGO_CONDITIONS.filter(combos => {\n      return combos.every(index => {\n        const match = cells[index].classList.contains(\"checked\");\n        return match;\n      });\n    });\n    setBingo(getMatchedCombos.length);\n    return getMatchedCombos.length;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${cellClass} ${checkClass}`,\n      onClick: () => {\n        setTrackBingo(bingo);\n\n        if (checkClass !== \"checked\") {\n          const brokenTextureNumber = Math.floor(Math.random() * (2 - 1 + 1)) + 1;\n          setCheckClass(`checked broken${brokenTextureNumber}`);\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"cellIndex\",\n        children: cellIndex\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"cell_text\",\n        children: cellText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"winScreen\",\n      style: {\n        zIndex: showWin,\n        opacity: showWin\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: winimage,\n        className: \"winImage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Cell, \"ZI8cGhpY35WmmM+BRodXF6Vv8zA=\");\n\n_c = Cell;\nexport default Cell; //   setTrackBingo(bingo);\n// } else if (trackBingo == bingo) {\n// }\n// console.log(`Bingo: ${bingo}  |  Track: ${trackBingo}`);\n// const len = checkBingo();\n// if (checkBingo()) {\n//   setShowWin(100);\n//   setTimeout(() => {\n//     setShowWin(-100);\n//   }, 2500);\n// }\n/////\n// const checkCombo = checkBingo().length;\n// setBingo(checkCombo);\n// if (trackBingo != bingo) {\n//   setTrackBingo(bingo);\n//   setShowWin(100);\n//   setTimeout(() => {\n//     setShowWin(-100);\n//   }, 2000);\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"Cell\");","map":{"version":3,"sources":["/Users/mohsinkamal/Desktop/bingo/src/Components/Cell/Cell.js"],"names":["React","useState","useEffect","winimage","Cell","cellClass","cellText","cellIndex","checkClass","setCheckClass","bingo","setBingo","trackBingo","setTrackBingo","showWin","setShowWin","cells","document","querySelectorAll","checkBingo","console","log","BINGO_CONDITIONS","getMatchedCombos","filter","combos","every","index","match","classList","contains","length","brokenTextureNumber","Math","floor","random","zIndex","opacity"],"mappings":"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","sourcesContent":["import \"./Cell_styles.scss\";\nimport React, { useState, useEffect } from \"react\";\nimport winimage from \"../../Assets/Images/win.gif\";\n\nconst Cell = ({ cellClass, cellText, cellIndex }) => {\n  const [checkClass, setCheckClass] = useState(\"\");\n  const [bingo, setBingo] = useState(0);\n  const [trackBingo, setTrackBingo] = useState();\n  const [showWin, setShowWin] = useState(-100);\n  var cells = null;\n\n  useEffect(() => {\n    cells = document.querySelectorAll(\".cell\");\n    checkBingo();\n  }, [checkClass]);\n\n  useEffect(() => {\n    console.log(trackBingo);\n  }, [trackBingo]);\n\n  const BINGO_CONDITIONS = [\n    // Horizontal\n    [0, 1, 2, 3, 4],\n    [5, 6, 7, 8, 9],\n    [10, 11, 12, 13],\n    [14, 15, 16, 17, 18],\n    [19, 20, 21, 22, 23],\n    //Vertical\n    [0, 5, 10, 14, 19],\n    [1, 6, 11, 15, 20],\n    [2, 7, 16, 21],\n    [3, 8, 12, 17, 22],\n    [4, 9, 13, 18, 23],\n    //Diagonal\n    [0, 6, 17, 23],\n    [4, 8, 15, 19],\n  ];\n\n  const checkBingo = () => {\n    const getMatchedCombos = BINGO_CONDITIONS.filter((combos) => {\n      return combos.every((index) => {\n        const match = cells[index].classList.contains(\"checked\");\n        return match;\n      });\n    });\n    setBingo(getMatchedCombos.length);\n    return getMatchedCombos.length;\n  };\n  return (\n    <>\n      <div\n        className={`${cellClass} ${checkClass}`}\n        onClick={() => {\n          setTrackBingo(bingo);\n          if (checkClass !== \"checked\") {\n            const brokenTextureNumber =\n              Math.floor(Math.random() * (2 - 1 + 1)) + 1;\n            setCheckClass(`checked broken${brokenTextureNumber}`);\n          }\n        }}\n      >\n        <p className=\"cellIndex\">{cellIndex}</p>\n        <p className=\"cell_text\">{cellText}</p>\n      </div>\n      <div className=\"winScreen\" style={{ zIndex: showWin, opacity: showWin }}>\n        <img src={winimage} className=\"winImage\" />\n      </div>\n    </>\n  );\n};\n\nexport default Cell;\n\n//   setTrackBingo(bingo);\n// } else if (trackBingo == bingo) {\n// }\n// console.log(`Bingo: ${bingo}  |  Track: ${trackBingo}`);\n// const len = checkBingo();\n// if (checkBingo()) {\n//   setShowWin(100);\n//   setTimeout(() => {\n//     setShowWin(-100);\n//   }, 2500);\n// }\n/////\n// const checkCombo = checkBingo().length;\n// setBingo(checkCombo);\n// if (trackBingo != bingo) {\n//   setTrackBingo(bingo);\n//   setShowWin(100);\n//   setTimeout(() => {\n//     setShowWin(-100);\n//   }, 2000);\n// }\n"]},"metadata":{},"sourceType":"module"}